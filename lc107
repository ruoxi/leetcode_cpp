107. Binary Tree Level Order Traversal II   QuestionEditorial Solution  My Submissions
Total Accepted: 104155
Total Submissions: 280932
Difficulty: Easy
Contributors: Admin
Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its bottom-up level order traversal as:
[
  [15,7],
  [9,20],
  [3]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
//Runtime: O(n)
//Space: O(n)
//Extraspace: O(w) w is the width of the tree

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(root == NULL) return vector<vector<int>>();
        
        queue<TreeNode*> q;
        q.push(root);
        vector<vector<int>> res;
        
        while(!q.empty())
        {
            int size = q.size();
            vector<int> level(size, 0);
            
            for(int i = 0; i < size; i++)
            {
                TreeNode* cur = q.front(); q.pop();
                
                level[i]= cur->val;
                if(cur->left != NULL) q.push(cur->left);
                if(cur->right != NULL) q.push(cur->right);
            }
            
            res.push_back(level);
        }
        
        reverse(res.begin(), res.end());
        return res;
    }
};
