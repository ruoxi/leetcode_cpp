270. Closest Binary Search Tree Value   QuestionEditorial Solution  My Submissions
Total Accepted: 22886
Total Submissions: 61455
Difficulty: Easy
Contributors: Admin
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 //Runtime: O(logN)
 //Space: O(1)
 
class Solution {
public:
    int closestValue(TreeNode* root, double target) {
        if(root == NULL) return -1;
        int res = root->val;
    
        while(root != NULL)
        {
            if(abs(res - target) > abs(root->val - target))
            {
                res = root->val;
            }
            
            if(root->val < target)
            {
                root = root->right;
            }
            else
            {
                root = root->left;
            }
        }
        
        return res;
    }
};
