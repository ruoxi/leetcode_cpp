216. Combination Sum III   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 55050
Total Submissions: 131212
Difficulty: Medium
Contributors: Admin
Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.


Example 1:

Input: k = 3, n = 7

Output:

[[1,2,4]]

Example 2:

Input: k = 3, n = 9

Output:

[[1,2,6], [1,3,5], [2,3,4]]
Credits:
Special thanks to @mithmatt for adding this problem and creating all test cases.


class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int> sol;
        vector<vector<int>> res;
        
        dfs(k, n, 1,sol, res);
        
        return res;
    }
    
    void dfs(int k, int target, int start, vector<int>& sol, vector<vector<int>>& res)
    {
        if(k ==0 && target == 0)
        {
            res.push_back(sol);
            return;
        }
        
        for(int i = start; i <=9; i++)
        {
            if(i > target) return;
            
            sol.push_back(i);
            dfs(k-1,target - i, i+1, sol, res);
            sol.pop_back();
        }
    }
};
