111. Minimum Depth of Binary Tree   QuestionEditorial Solution  My Submissions
Total Accepted: 136515
Total Submissions: 427045
Difficulty: Easy
Contributors: Admin
Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 //Runtine: O(n)
 //Space: O(logN)
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL) return 0;
        if(root->left == NULL && root->right == NULL) return 1;
        
        if(root->left == NULL) return minDepth(root->right)+1;
        if(root->right == NULL) return minDepth(root->left)+1;
        
        
        return min(minDepth(root->left), minDepth(root->right))+1;
    }
};
