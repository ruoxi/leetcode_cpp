93. Restore IP Addresses   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 74082
Total Submissions: 286437
Difficulty: Medium
Contributors: Admin
Given a string containing only digits, restore it by returning all possible valid IP address combinations.

For example:
Given "25525511135",

return ["255.255.11.135", "255.255.111.35"]. (Order does not matter)

class Solution {
public:
    //每一层从长度从1到3
    //注意每一层range从0...255,如果是大于1位不能以0开头
    vector<string> restoreIpAddresses(string s) {
        if(s.empty()) return vector<string>();
        
        int n = s.length();
        if(n/4 > 3) return vector<string>();
        
        vector<string> sol;
        vector<string> res;
        
        dfs(s, 0, sol, res, 4);
        
        return res;
    }
    
    void dfs(string s, int idx, vector<string>& sol, vector<string>& res, int depth)
    {
        if(idx == s.length() && depth == 0)
        {
            string ans = "";
            for(int i = 0; i < sol.size(); i++)
            {
                ans += sol[i];
                if(i < sol.size()-1)
                {
                    ans +=".";
                }
            }
            res.push_back(ans);
            return;
        }
        
        int num = 0;
        string cur = "";
        for(int i = 0; i < 3 && idx+i < s.length(); i++)
        {
            if(s[idx] == '0' && i > 0) return;
            num = num*10 + s[idx+i] - '0';
            cur += s[idx+i];
            if(num > 255 ) return;
            
            sol.push_back(cur);
            dfs(s, idx+i+1, sol, res, depth-1);
            sol.pop_back();
            
        }
    }
};
