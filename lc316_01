316. Remove Duplicate Letters   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 25364
Total Submissions: 88662
Difficulty: Hard
Contributors: Admin
Given a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.

Example:
Given "bcabc"
Return "abc"

Given "cbacdcbc"
Return "acdb"

Credits:
Special thanks to @dietpepsi for adding this problem and creating all test cases.


class Solution {
public:
    //needs a vector of denote the occurance of each char
    //Then use stack to track possible answers
    //when we see a char which is smaller than stk.top() and cnt[stk.top()] > 0 means this stk.top can be placed later, so remove it from the stack
    //Note here we need a visited array to mark if the cur has been put into stack or not
    string removeDuplicateLetters(string s) {
        if(s.empty()) return s;
        
        int n =s.length();
        
        stack<char> stk;
        vector<int> cnts(26, 0);
        vector<bool> visited(26, false);
        
        for(int i = 0; i < n; i++)
        {
            cnts[s[i]-'a']++;
        }
        
        for(int i = 0; i < n; i++)
        {
            char cur = s[i];
            cnts[cur-'a']--;
            if(visited[cur-'a']) continue;
            
            if(stk.empty() || stk.top() < cur)
            {
                stk.push(cur);
            }
            else if(!stk.empty() && stk.top() > cur)
            {
                //if stk.top() > cur & cnts[stk.top()] > 0, means we can use this stk.top() later
                
                while(!stk.empty() && stk.top() > cur && cnts[stk.top() -'a'] >0)
                {
                    visited[stk.top()-'a'] = false;
                    stk.pop();
                }
                
                stk.push(cur);
            }
            visited[cur-'a'] = true;
        }
        
        string res = "";
        
        while(!stk.empty())
        {
            res = stk.top() + res;
            stk.pop();
        }
        
        return res;
    }
};
