199. Binary Tree Right Side View   QuestionEditorial Solution  My Submissions
Total Accepted: 61154
Total Submissions: 160472
Difficulty: Medium
Contributors: Admin
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4].

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
//Runtime: O(n)
//Space: O(logn) ???
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root == NULL) return vector<int>();
        
        vector<int> res;
        dfs(root, 0, res);
        return res;
    }
    
    void dfs(TreeNode* root, int depth, vector<int>& res)
    {
        if(root == NULL) return;
        
        if(depth == res.size())
        {
            res.push_back(root->val);
        }
        
        dfs(root->right, depth+1, res);
        dfs(root->left, depth+1, res);
    }
};
