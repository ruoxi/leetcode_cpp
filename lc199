199. Binary Tree Right Side View   QuestionEditorial Solution  My Submissions
Total Accepted: 61154
Total Submissions: 160472
Difficulty: Medium
Contributors: Admin
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

For example:
Given the following binary tree,
   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---
You should return [1, 3, 4].
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 //Runtime: O(n)
 //Space: O(n)
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root == NULL) return vector<int>();
        
        queue<TreeNode*> q;
        q.push(root);
        
        vector<int> res;
        while(!q.empty())
        {
            int size = q.size();
            for(int i = 0; i < size; i++)
            {
                TreeNode* cur = q.front();
                q.pop();
                
                if(i == size-1)
                {
                    res.push_back(cur->val);
                }
                
                if(cur->left != NULL) q.push(cur->left);
                if(cur->right != NULL) q.push(cur->right);
            }
        }
        
        return res;
    }
};
