22. Generate Parentheses   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 124056
Total Submissions: 296489
Difficulty: Medium
Contributors: Admin
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]


//思路：每次只放valid 的结果
//valid代表先放左括号，只有当右括号剩下的个数大于左括号剩下的个数时才放右括号
class Solution {
public:
    //number of ( & number of )
    vector<string> generateParenthesis(int n) {
        if(n == 0) return vector<string>();
        
        string sol;
        vector<string> res;
        
        dfs(n, n, sol, res);
        
        return res;
        
    }
    
    void dfs(int left, int right, string sol, vector<string>& res)
    {
        if(left == 0 && right == 0)
        {
            res.push_back(sol);
            return;
        }
        
        if(left > 0) 
        { dfs(left-1, right, sol+"(", res);}
        
        if(right > left) 
        {dfs(left, right-1, sol+")", res);}
    }
};
