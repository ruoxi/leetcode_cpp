414. Third Maximum Number   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 18871
Total Submissions: 70396
Difficulty: Easy
Contributors: ZengRed , 1337c0d3r
Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.


//Runtime: O(nlogn)
//Space:O(1)

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        if(nums.empty()) return 0;
        
        int n = nums.size();
        set<int> minheap;
        
        for(int i = 0; i < n; i++)
        {
            minheap.insert(nums[i]);
            
            if(minheap.size() > 3)
            {
                minheap.erase(minheap.begin());
            }
            
        }
        
        
        
        return minheap.size() == 3 ? *minheap.begin() : *minheap.rbegin();
    }

};
