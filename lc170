//170. Two Sum III - Data structure design  QuestionEditorial Solution  My Submissions
//Total Accepted: 17461
//Total Submissions: 77200
//Difficulty: Easy
//Design and implement a TwoSum class. It should support the following operations: add and find.

//add - Add the number to an internal data structure.
//find - Find if there exists any pair of numbers which sum is equal to the value.

//For example,
//add(1); add(3); add(5);
//find(4) -> true
//find(7) -> false

class TwoSum {
public:

    // Add the number to an internal data structure.
	void add(int number) {
	    table[number]++;
	}

    // Find if there exists any pair of numbers which sum is equal to the value.
	bool find(int value) {
	    
	    for(auto elem: table)
	    {
	        int target = value - elem.first;
	        
	        if(target != elem.first && table.find(target) != table.end() || (target == elem.first && table[target] > 1))
	        {
	            return true;
	        }
	    }
	    
	    return false;
	}
	
	//key is num, value is frequency
	unordered_map<int, int> table;

};


// Your TwoSum object will be instantiated and called as such:
// TwoSum twoSum;
// twoSum.add(number);
// twoSum.find(value);
