423. Reconstruct Original Digits from English   QuestionEditorial Solution  My Submissions
Total Accepted: 2644
Total Submissions: 6567
Difficulty: Medium
Contributors: Admin
Given a non-empty string containing an out-of-order English representation of digits 0-9, output the digits in ascending order.

Note:
Input contains only lowercase English letters.
Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as "abc" or "zerone" are not permitted.
Input length is less than 50,000.
Example 1:
Input: "owoztneoer"

Output: "012"
Example 2:
Input: "fviefuro"

Output: "45"

//思路：这道题要找出1...9的英文中不同的字母用来cnt个个数字出现的次数
class Solution {
public:
    string originalDigits(string s) {
        vector<int> cnt(10, 0);
        
        for(int i = 0; i < s.length(); i++)
        {
            char c = s[i];
            if(c == 'z') cnt[0]++;
            if(c == 'w') cnt[2]++;
            if(c == 'u') cnt[4]++;
            if(c == 'f') cnt[5]++; //5-4
            if(c == 'x') cnt[6]++;
            if(c == 's') cnt[7]++; // 7-6
            if(c == 'g') cnt[8]++;
            if(c == 'h') cnt[3]++; //3-8
            if(c == 'i') cnt[9]++; //9-8-6-5
            if(c == 'o') cnt[1]++; //1-0-2-4
            
        }
        
        cnt[7] -= cnt[6];
        cnt[5] -= cnt[4];
        cnt[3] -= cnt[8];
        cnt[9] = cnt[9]-cnt[8]-cnt[6]-cnt[5];
        cnt[1] = cnt[1]-cnt[0]-cnt[2]-cnt[4];
        
        string res = "";
        for(int i = 0; i <= 9; i++)
        {
            while(cnt[i] >0)
            {
                res+='0'+i;
                cnt[i]--;
            }
        }
        
        return res;
    }
};
