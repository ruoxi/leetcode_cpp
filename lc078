78. Subsets   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 135699
Total Submissions: 369925
Difficulty: Medium
Contributors: Admin
Given a set of distinct integers, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        if(nums.empty()) return vector<vector<int>>();
        
        vector<int> sol;
        vector<vector<int>> res;
        dfs(nums, 0, sol, res);
        return res;
    }
    
    void dfs(vector<int>& nums, int idx, vector<int>& sol, vector<vector<int>>& res)
    {
        res.push_back(sol);

        
        for(int i = idx; i < nums.size(); i++)
        {
            sol.push_back(nums[i]);
            dfs(nums, i+1, sol, res);
            sol.pop_back();
        }
    }
};
