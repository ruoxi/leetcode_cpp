16. 3Sum Closest   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 107250
Total Submissions: 351590
Difficulty: Medium
Contributors: Admin
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).


//Runtime: O(nlogn)
//Space: O(1)

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        if(nums.size() < 3) return -1;
        
        int n = nums.size();
        
        sort(nums.begin(), nums.end());
        
        //这里res用前三个数的和initialize比较好
        int res = nums[0] + nums[1] + nums[2];
        for(int i = 0; i < n-2; i++)
        {
            int left = i+1, right = n-1;
            while(left < right)
            {
                int sum = nums[i] + nums[left]+nums[right];
                
                if(sum == target)
                {
                    return sum;
                }
                else if(sum < target)
                {
                    if(target - sum < abs(target - res))
                    {
                        res = sum;
                    }
                    left++;
                }
                else
                {
                    if(sum - target < abs(target-res))
                    {
                        res = sum;
                    }
                    right--;
                }
            }
            
        }
        
        return res;
    }
};
