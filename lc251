251. Flatten 2D Vector   QuestionEditorial Solution  My Submissions
Total Accepted: 16267
Total Submissions: 43362
Difficulty: Medium
Contributors: Admin
Implement an iterator to flatten a 2d vector.

For example,
Given 2d vector =

[
  [1,2],
  [3],
  [4,5,6]
]
By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,2,3,4,5,6].

class Vector2D {
public:
    Vector2D(vector<vector<int>>& vec2d) {
        i = vec2d.begin();
        iend = vec2d.end();
        
        j = 0;
    }

    int next() {
        return (*i)[j++];

    }

    bool hasNext() {
        while(i != iend && (*i).size() == j)
        {
            i++;
            j=0;
        }
        
        return i != iend;
    }
    
    //need two iterators to point to start and end of vec2d
    vector<vector<int>>::iterator i;
    vector<vector<int>>::iterator iend;
    int j;
};

/**
 * Your Vector2D object will be instantiated and called as such:
 * Vector2D i(vec2d);
 * while (i.hasNext()) cout << i.next();
 */
