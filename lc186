/*186. Reverse Words in a String II   QuestionEditorial Solution  My Submissions
Total Accepted: 15782
Total Submissions: 54711
Difficulty: Medium
Contributors: Admin
Given an input string, reverse the string word by word. A word is defined as a sequence of non-space characters.

The input string does not contain leading or trailing spaces and the words are always separated by a single space.

For example,
Given s = "the sky is blue",
return "blue is sky the".

Could you do it in-place without allocating extra space?
*/

//注意：最后一个单词需要在最后再swap一遍，这样如果string只有一个单词的话会被reverse两次，

class Solution {
public:
    //sol: reverse the whole string first, then reverse each word
    void reverseWords(string &s) {
        
        int n = s.length();
        int start = 0, end = n-1;
        
        swap(s, start, end);
        
        //now reverse each word
        start = 0;
        for(int i = 0 ; i < n; i++)
        {
            if(s[i] == ' ')
            {
                end = i-1;
                swap(s, start, end);
                start = i+1;
            }
            
        }
        
        //reverse last word
        end = n-1;
        swap(s, start, end);
        
    }
    
    void swap(string& s, int start, int end)
    {
        while(start < end)
        {
            char tmp = s[start];
            s[start] = s[end];
            s[end] = tmp;
            start++; end--;
        }
    }
};
