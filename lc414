/*
414. Third Maximum Number   QuestionEditorial Solution  My Submissions
Total Accepted: 4157
Total Submissions: 15850
Difficulty: Easy
Contributors: ZengRed , 1337c0d3r
Given a non-empty array of integers, return the third maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).

Example 1:
Input: [3, 2, 1]

Output: 1

Explanation: The third maximum is 1.
Example 2:
Input: [1, 2]

Output: 2

Explanation: The third maximum does not exist, so the maximum (2) is returned instead.
Example 3:
Input: [2, 2, 3, 1]

Output: 1

Explanation: Note that the third maximum here means the third maximum distinct number.
Both numbers with value 2 are both considered as second maximum.
*/

//思路：因为要去重，priority_queue就不行，只能用set

class Solution {
public:
    int thirdMax(vector<int>& nums) {
        set<int> s;
        int maxv = INT_MIN;
        
        for(int i = 0; i < nums.size(); i++)
        {
            maxv = max(maxv, nums[i]);
            s.insert(nums[i]);
            if(s.size() > 3)
            {
                s.erase(s.begin());
            }
            
        }
        
        if(s.size() == 3) return *s.begin();
        else return maxv;
    }
};
