/*5. Longest Palindromic Substring   QuestionEditorial Solution  My Submissions
Total Accepted: 139961
Total Submissions: 584381
Difficulty: Medium
Contributors: Admin
Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.
*/

//思路：这里把input str 改成 #a#b#b#a# 这样把even 和odd 情况都可以同时处理 eg, aba,和abba
//然后是以每一个字母为中心，向右向左看能否match，不行的话就跳出然后update maxlen 和mid点

class Solution {
public:
    string processstr(string s)
    {
        string res = "#";
        int n = s.length();
        //cout << "s n=" << n << endl;
        for(int i = 0; i < n; i++)
        {
            //cout << "i=" <<i << " s[" << i << "]=" << s[i] << endl;
            res += s[i];
            res += "#";
            //cout << res << endl;
        }
        
        return res;
    }
    string longestPalindrome(string s) {
        //add # between chars so that we can get rid of odd and even cases
        string ss = processstr(s);
        cout << ss << endl;
        int len = 0;
        int start = 0;
        int maxlen = INT_MIN;
        int n = ss.length();
        for(int i = 0; i < n; i++)
        {
            int j =0;
            for(; i+j <n && i-j >=0; j++ )
            {
                //cout << "i=" << i << "j=" << j << endl;
                //cout << "ss[" << i+j << "]=" << ss[i+j] << " ss["<<i-j<<"]=" << ss[i-j] << endl;
                if(ss[i+j] != ss[i-j])
                {
 
                    break;
                }
               
            }
            
            if(maxlen < j-1)
            {
                maxlen = j-1;
                start = i;
            }
         
        }
        
        //cout << "start=" << start << " maxlen=" << maxlen << " n=" << n << endl;
        //now get substring
        string res = "";
        for(int i = start-maxlen; i<=start+maxlen; i++)
        {
            if(ss[i] != '#')
            {
                res+=ss[i];
            }
        }
        return res;
    }
};
