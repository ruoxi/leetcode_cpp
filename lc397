397. Integer Replacement   QuestionEditorial Solution  My Submissions
Total Accepted: 9180
Total Submissions: 32214
Difficulty: Medium
Contributors: Admin
Given a positive integer n and you can do operations as follow:

If n is even, replace n with n/2.
If n is odd, you can replace n with either n + 1 or n - 1.
What is the minimum number of replacements needed for n to become 1?

Example 1:

Input:
8

Output:
3

Explanation:
8 -> 4 -> 2 -> 1
Example 2:

Input:
7

Output:
4

Explanation:
7 -> 8 -> 4 -> 2 -> 1
or
7 -> 6 -> 3 -> 2 -> 1

class Solution {
public:
    //key idea is even number is better than odd=>create as many trailing zeros as possible
    //if n&1 == 0 just shift to right
    //if n&1 == 1, check if (n-1) or (n+1) results in less 1
    //this can be achieved by check last two digits: *01 -> *00 should decrease
    //if *111-> *110 /*1000  then increasing is better than decreasing
    //one exception is n=3; 11->10->1 (2 steps) 11->100->10->1 (3 steps) in this case decreasing is better than increasing
    int integerReplacement(int n) {
       
      unsigned int num = n;
      int res = 0;
      while(num != 1)
      {
          if((num&1) == 0)
          {
              num = num >> 1;
              //cout << "num=" << num << endl;
          }
          else if(num == 3 || (num&0b11) == 1)
          {
              //end with *01
              num = num-1;
          }
          else 
          {
              num = num+1;
          }
          res++;
          
      }
      
      return res;
       
    }
};
