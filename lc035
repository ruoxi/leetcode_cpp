35. Search Insert Position   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 140518
Total Submissions: 360206
Difficulty: Easy
Contributors: Admin
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0

//Runtime: O(logn)
//Space: O(1)

class Solution {
public:
    //find the first larger or equal to target
    int searchInsert(vector<int>& nums, int target) {
        if(nums.empty()) return 0;
        
        int start = 0, end = nums.size()-1;
        
        while(start + 1 < end)
        {
            int mid = start + (end-start)/2;
            
            if(nums[mid] >= target)
            {
                end = mid;
            }
            else if(nums[mid] < target)
            {
                start = mid;
            }
        }
        
        if(nums[start] >= target) return start;
        if(nums[end] >= target) return end;
        return nums.size();
        
    }
};
