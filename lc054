54. Spiral Matrix   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 86657
Total Submissions: 350851
Difficulty: Medium
Contributors: Admin
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

For example,
Given the following matrix:

[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
You should return [1,2,3,6,9,8,7,4,5].

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        if(matrix.empty() || matrix.at(0).empty()) return vector<int>();
        
        int n = matrix.size();
        int m = matrix.at(0).size();
        
        vector<int> res(n*m, 0);
        
        int imin = 0, imax = n-1, jmin=0, jmax=m-1;
        
        int k = 0;
        while(imin <n && imax >=0 && jmin < m && jmin >=0)
        {
            //top row
            for(int j = jmin; j <= jmax; j++)
            {
                res[k] = matrix[imin][j];
                k++;
            }
            
            imin++;
            if(imin >imax) break;
            //right col
            for(int i = imin; i <= imax; i++)
            {
                res[k] = matrix[i][jmax];
                k++;
            }
            
            jmax--;
            if(jmax <jmin) break;
            //bottom row
            for(int j = jmax; j>=jmin;j--)
            {
                res[k] = matrix[imax][j];
                k++;
            }
            
            imax--;
            if(imax < imin) break;
            //left col
            for(int i = imax; i >= imin; i--)
            {
                res[k] = matrix[i][jmin];
                k++;
            }
            
            jmin++;
            if(jmin>jmax) break;
        }
        
        return res;
    }
};
