129. Sum Root to Leaf Numbers   QuestionEditorial Solution  My Submissions
Total Accepted: 94643
Total Submissions: 272321
Difficulty: Medium
Contributors: Admin
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers.

For example,

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = 12 + 13 = 25.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        if(root == NULL) return 0;
        if(root->left == NULL && root->right == NULL) return root->val;
        
        int res = 0;
        helper(root, 0, res);
        return res;
    }
    
    void helper(TreeNode* root, int num, int& res)
    {
        if(root == NULL) return;
        
        
        num = num*10 + root->val;
        
        if(root->left == NULL && root->right == NULL)
        {
            res += num;
            return;
        }
        
        helper(root->left, num, res);
        helper(root->right, num, res);
    }
};
