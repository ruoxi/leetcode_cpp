150. Evaluate Reverse Polish Notation   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 83187
Total Submissions: 320405
Difficulty: Medium
Contributors: Admin
Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6


class Solution {
public:
    //思路：看到数字就push进stack中
    //当看到operator的时候从stack 中pop出两个数字，apply operator,再放入stack
    int evalRPN(vector<string>& tokens) {
        if(tokens.empty()) return 0;
        
        int n = tokens.size();
        
        stack<int> stk;
        for(int i = 0; i < n; i++)
        {
            string cur = tokens[i];
            if(isOp(cur))
            {
                int second = stk.top(); stk.pop();
                int first = stk.top(); stk.pop();
                int res = applyOp(first, second, cur);
                stk.push(res);
                
            }
            else
            {
                int num = stoi(cur);
                stk.push(num);
            }
        }
        
        return stk.top();
    }
    
    
    bool isOp(string& str)
    {
        if(str.empty()) return false;
        
        if(str == "+" || str == "-" || str == "*" || str == "/")
        {
            return true;
        }
        
        return false;
    }
    
    
    int applyOp(int first, int second, string op)
    {
        if(op == "+") return first + second;
        if(op == "-") return first - second;
        if(op == "*") return first*second;
        if(op == "/") return first/second;
    }
    
};
