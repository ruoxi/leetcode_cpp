40. Combination Sum II   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 96873
Total Submissions: 309256
Difficulty: Medium
Contributors: Admin
Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.

Each number in C may only be used once in the combination.

Note:
All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.
For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, 
A solution set is: 
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]


class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        if(candidates.empty()) return vector<vector<int>>();
        
        sort(candidates.begin(), candidates.end());
        
        vector<int> sol;
        vector<vector<int>> res;
        
        dfs(candidates, 0, target, sol, res);
        return res;
    }
    
    void dfs(vector<int>& candidates, int start, int target, vector<int>& sol, vector<vector<int>>& res)
    {
        if(target == 0)
        {
            res.push_back(sol);
            return;
        }
        
        for(int i = start; i < candidates.size(); i++)
        {
            if(candidates[i] > target) continue;
            
            if(i > start && candidates[i] == candidates[i-1]) continue;
            
            sol.push_back(candidates[i]);
            dfs(candidates, i+1, target - candidates[i], sol, res);
            
            sol.pop_back();
            
        }
    }
};
