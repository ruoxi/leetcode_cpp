/*
406. Queue Reconstruction by Height   QuestionEditorial Solution  My Submissions
Total Accepted: 6936
Total Submissions: 12973
Difficulty: Medium
Contributors: Admin
Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]
Show Company Tags
Hide Tags
*/


class Solution {
public:
    //思路：把vector按照身高sort=> {(7, 0), (7, 1), (6, 1), (5,0), (5,1), (4,4)}
    //然后取出最高的(7,0), (7,1)
    //再拿出第二高的，按照k插入-》(7,0),(6,1),(7,0)
    
    class Comparator
    {
    public:
        bool operator()(const pair<int, int>& a, const pair<int, int>& b)
        {
            if(a.first != b.first)
            {
                return a.first > b.first;
            }
            else
            {
                return a.second < b.second;
            }
        }
    };
    vector<pair<int, int>> reconstructQueue(vector<pair<int, int>>& people) {
        sort(people.begin(), people.end(), Comparator());
        
        vector<pair<int, int>> res;
        for(int i = 0; i < people.size(); i++)
        {
            res.insert(res.begin()+people[i].second, people[i]);
        }
        
        return res;
    }
};
