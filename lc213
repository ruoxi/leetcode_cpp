213. House Robber II   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 44410
Total Submissions: 135393
Difficulty: Medium
Contributors: Admin
Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

Credits:
Special thanks to @Freezen for adding this problem and creating all test cases.


//Runtime: O(n)
//Space: O(1)

//Note: Key point is break the circle 
class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.empty()) return 0;
        if(nums.size() == 1) return nums[0];
        
        int n = nums.size();
        return max(helper(nums, 0, n-2), helper(nums, 1, n-1));
    }
    
    int helper(vector<int>& nums, int start, int end)
    {
        int rob = 0;
        int notrob = 0;
        
        for(int i = start; i <=end; i++)
        {
            int tmp = rob;
            rob = notrob + nums[i];
            notrob = max(tmp, notrob);
        }
        
        return max(rob, notrob);
    }
};
