/*341. Flatten Nested List Iterator   QuestionEditorial Solution  My Submissions
Total Accepted: 19143
Total Submissions: 52656
Difficulty: Medium
Contributors: Admin
Given a nested list of integers, implement an iterator to flatten it.

Each element is either an integer, or a list -- whose elements may also be integers or other lists.

Example 1:
Given the list [[1,1],2,[1,1]],

By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].

Example 2:
Given the list [1,[4,[6]]],

By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].

*/
//思路：利用stack,iteratively flatten the nestedInterger
//注意塞stack得时候是将vector从后向前塞
/**
 * // This is the interface that allows for creating nested lists.
 * // You should not implement it, or speculate about its implementation
 * class NestedInteger {
 *   public:
 *     // Return true if this NestedInteger holds a single integer, rather than a nested list.
 *     bool isInteger() const;
 *
 *     // Return the single integer that this NestedInteger holds, if it holds a single integer
 *     // The result is undefined if this NestedInteger holds a nested list
 *     int getInteger() const;
 *
 *     // Return the nested list that this NestedInteger holds, if it holds a nested list
 *     // The result is undefined if this NestedInteger holds a single integer
 *     const vector<NestedInteger> &getList() const;
 * };
 */
class NestedIterator {
public:
    NestedIterator(vector<NestedInteger> &nestedList) {
        for(int i = nestedList.size()-1; i>=0; i--)
        {
            stk.push(nestedList.at(i));
        }
    }

    int next() {
  
        int res = stk.top().getInteger();
        stk.pop();
        return res;
    }

    bool hasNext() {
        while(!stk.empty())   
        {
            NestedInteger cur = stk.top();
            if(cur.isInteger())
            {
                return true;
            }
            
            stk.pop();
            const vector<NestedInteger> &flat = cur.getList();
            for(int i = flat.size()-1; i>=0; i--)
            {
                stk.push(flat.at(i));
            }
            
            
        }
        
        return false;
    }
    
    stack<NestedInteger> stk;
};

/**
 * Your NestedIterator object will be instantiated and called as such:
 * NestedIterator i(nestedList);
 * while (i.hasNext()) cout << i.next();
 */
