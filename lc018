18. 4Sum   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 99682
Total Submissions: 388655
Difficulty: Medium
Contributors: Admin
Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note: The solution set must not contain duplicate quadruplets.

For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
Show Tags
Show Similar Problems

//Runtime: o(N^3)
//Space: O(1)

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        if(nums.size() < 4) return vector<vector<int>>();
        
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> res;
        
        for(int i = 0; i < n; i++)
        {
            if(i > 0 && nums[i] == nums[i-1]) continue;
            
            for(int j = i+1; j < n; j++)
            {
                if(j > i+1 && nums[j] == nums[j-1]) continue;
                
                int left = j+1, right = n-1;
                
                while(left < right)
                {
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];
                    if(sum == target)
                    {
                        res.push_back({nums[i], nums[j], nums[left], nums[right]});
                        
                        left++;
                        right--;

                        while(left < right && nums[left] == nums[left-1]) left++;
                        
                        while(left < right && nums[right] == nums[right+1]) right--;
                        
                    }
                    else if(sum < target)
                    {
                        left++;
                    }
                    else
                    {
                        right--;
                    }
                }
            }
        }
        return res;
    }
};
