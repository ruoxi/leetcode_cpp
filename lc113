113. Path Sum II   QuestionEditorial Solution  My Submissions
Total Accepted: 103668
Total Submissions: 336118
Difficulty: Medium
Contributors: Admin
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
//Runtime: O(n)
//Space: O(logn)

class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> res;
        vector<int> sol;
        
        dfs(root, sum, res, sol);
        
        return res;
    }
    
    void dfs(TreeNode* root, int sum, vector<vector<int>>& res, vector<int>& sol)
    {
        if(root == NULL) return;
        
        sol.push_back(root->val);
        if(root->left == NULL && root->right == NULL && sum == root->val)
        {
            res.push_back(sol);
            sol.pop_back();
            return;
        }
        
        dfs(root->left, sum-root->val, res, sol);
        dfs(root->right, sum-root->val, res, sol);
        
        sol.pop_back();
    }
};
