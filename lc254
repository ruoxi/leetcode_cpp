//254. Factor Combinations  QuestionEditorial Solution  My Submissions
//Total Accepted: 14284
//Total Submissions: 37165
//Difficulty: Medium
//Numbers can be regarded as product of its factors. For example,

//8 = 2 x 2 x 2;
//  = 2 x 4.
//Write a function that takes an integer n and return all possible combinations of its factors.

//Note: 
//You may assume that n is always positive.
//Factors should be greater than 1 and less than n.
//Examples: 
//input: 1
//output: 
//[]
//input: 37
//output: 
//[]
//input: 12
//output:
//[
//  [2, 6],
//  [2, 2, 3],
//  [3, 4]
//]
//input: 32

//similar to 39. Combination Sum
//given a array nums = {1,2, 3, 4} find all combinations for sum = 12, and same number can be used unlimited times
//这类题same number can be used unlimited times, 在call下一层dfs的时候，start index 不变，代表当前num[start]可以被重复取

class Solution {
public:

    void dfs(int n, vector<int>& sol, vector<vector<int>>& res, int start)
    {
        if(n<=1)
        {
            //note here need to check sol.size() == 1 
            //eg, n =12, one illegal solution is {12}
            if(sol.size() <=1) return;
            res.push_back(sol);
            return;
        }
        
        for(int i = start; i <=n; i++)
        {
            if(n%i != 0) continue;
            sol.push_back(i);
            dfs(n/i, sol, res, i);
            sol.pop_back();
        }
    }
    vector<vector<int>> getFactors(int n) {
        if(n <2) return vector<vector<int>>();
        
        vector<int> sol;
        vector<vector<int>> res;
        
        dfs(n, sol, res, 2);
        
        return res;
    }
};
