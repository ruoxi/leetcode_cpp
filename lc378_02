378. Kth Smallest Element in a Sorted Matrix   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 22943
Total Submissions: 53326
Difficulty: Medium
Contributors: Admin
Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.

Note that it is the kth smallest element in the sorted order, not the kth distinct element.

Example:

matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

return 13.
Note: 
You may assume k is always valid, 1 ≤ k ≤ n2.


class Solution {
public:

    class Node
    {
    public:
        int x;
        int y;
        int v;
        Node(int xx, int yy, int vv)
        :x(xx),y(yy),v(vv){}
    };
    
    class Comparator
    {
    public:
        bool operator()(const Node& a, const Node& b)
        {
            if(a.v != b.v) return a.v > b.v;
            return a.x > b.x;
        }
    };
    
    vector<int> dx = {1, 0};
    vector<int> dy = {0, 1};
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        if(matrix.empty() || matrix.at(0).empty()) return 0;
        
        int n = matrix.size();
        int m = matrix.at(0).size();
        
        priority_queue<Node, vector<Node>, Comparator> pq;

        //push entire first row into pq
        for(int j = 0; j < m; j++)
        {
            pq.push(Node(0, j, matrix[0][j]));
        }
        
        int res = -1;
        
        for(int i = 0; i < k; i++)
        {
            Node cur = pq.top();
            res = cur.v;
            pq.pop();
            if(cur.x == n-1) continue;
            pq.push(Node(cur.x+1, cur.y, matrix[cur.x+1][cur.y]));            
            
        }
        
        return res;
    }
};
