398. Random Pick Index   QuestionEditorial Solution  My Submissions
Total Accepted: 6890
Total Submissions: 18797
Difficulty: Medium
Contributors: Admin
Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.

Note:
The array size can be very large. Solution that uses too much extra space will not pass the judge.

Example:

int[] nums = new int[] {1,2,3,3,3};
Solution solution = new Solution(nums);

// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.
solution.pick(3);

// pick(1) should return 0. Since in the array only nums[0] is equal to 1.
solution.pick(1);

//Reservoir Sampling
class Solution {
public:
    Solution(vector<int> nums) {
        m_nums = nums;
    }
    
    int pick(int target) {
        
        int count = 0;
        int res = -1;
        for(int i = 0; i < m_nums.size(); i++)
        {
            if(m_nums[i] != target)
            {
                continue;
            }
            count++;
            if(rand()%count == 0)
            {
                //Note: don't do break here!!!!
                res = i;
            }
        }
        
        return res;
    }
    
    vector<int> m_nums;
    
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(nums);
 * int param_1 = obj.pick(target);
 */
