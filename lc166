//166. Fraction to Recurring Decimal   QuestionEditorial Solution  My Submissions
//Total Accepted: 39904
//Total Submissions: 243593
//Difficulty: Medium
//Contributors: Admin
//Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

//If the fractional part is repeating, enclose the repeating part in parentheses.

//For example,

//Given numerator = 1, denominator = 2, return "0.5".
//Given numerator = 2, denominator = 1, return "2".
//Given numerator = 2, denominator = 3, return "0.(6)".



class Solution {
public:
    string fractionToDecimal(int numerator, int denominator) {
        if(numerator == denominator) return "1";
        if(numerator == 0) return"0";
        string res="";
        
        
        if(numerator < 0 ^ denominator < 0) res +="-";
        long n = labs(numerator);
        long d = labs(denominator);
        cout << "n=" << n << " d="<< d<< endl;
        res += to_string(n/d);
        
        if(n%d == 0) return res;
        
        res+=".";
        unordered_map<long, long> visited;
        
        n = n%d;
        while(n!=0)
        {
            //if n is recurring
            if(visited.find(n) != visited.end())
            {
                res.insert(visited[n],1,'(');
                res+=')';
                return res;
            }
            
            visited[n] = res.size();
            
            n = n*10;
            int a = n/d;
            
            res+= to_string(a);
            
            n = n%d;
            
            
        }
        
        return res;
    }
};
