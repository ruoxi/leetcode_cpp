//The gray code is a binary numeral system where two successive values differ in only one bit.

//Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

//For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

//00 - 0
//01 - 1
//11 - 3
//10 - 2
//Note:
//For a given n, a gray code sequence is not uniquely defined.

//For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.

class Solution {
public:
    //check wiki, n = 2, gray code is 00, 01, 11, 10
    // n=3, gray code is 110, 111, 101, 100
    //n=3 gray code is: first get mirror image of n=2 result, then add most significant bit 1
    //eg. first reverse n=2 result we have: 10, 11, 01, 00
    //then add MSB we have 110, 111, 101, 100
    vector<int> grayCode(int n) {
        //BFS
        vector<int> res;
        res.push_back(0);

        for(int i = 0; i < n; i++)
        {
            //for each level 
            int len = res.size();
            for(int j = len-1; j >= 0; j--)
            {
                res.push_back(res[j] |(1<<i));
            }
  
        }
        
        return res;
        
    }
};
