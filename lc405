405. Convert a Number to Hexadecimal   QuestionEditorial Solution  My Submissions
Total Accepted: 6770
Total Submissions: 16403
Difficulty: Easy
Contributors: Admin
Given an integer, write an algorithm to convert it to hexadecimal. For negative integer, two’s complement method is used.

Note:

All letters in hexadecimal (a-f) must be in lowercase.
The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.
The given number is guaranteed to fit within the range of a 32-bit signed integer.
You must not use any method provided by the library which converts/formats the number to hex directly.
Example 1:

Input:
26

Output:
"1a"
Example 2:

Input:
-1

Output:
"ffffffff"
Show Tags

//这里需要注意-1的情况，如果不用count < 8 break loop的话，会一直循环下去 ？？？？？

class Solution {
public:
    vector<string> tohexmap = {"0", "1", "2", "3", "4","5","6","7","8","9","a","b","c","d","e","f"};
    
    string toHex(int num) {
        if(num == 0) return "0";
       
        string res = "";
        int count = 0;
        while(num != 0 && count < 8)
        {
            //int cur = num&15;
            //cout << "num&15=" << (num&15) << endl;
            //cout << "num>>4=" << (num >> 4) << endl;
            res = tohexmap[num&15] + res;
            count++;
            num = (num >> 4);
        }
        
        return res;
    }
};
