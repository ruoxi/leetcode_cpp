163. Missing Ranges   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 23893
Total Submissions: 89150
Difficulty: Medium
Contributors: Admin
Given a sorted integer array where the range of elements are in the inclusive range [lower, upper], return its missing ranges.

For example, given [0, 1, 3, 50, 75], lower = 0 and upper = 99, return ["2", "4->49", "51->74", "76->99"].


class Solution {
public:
    vector<string> findMissingRanges(vector<int>& nums, int lower, int upper) {
        
        vector<string> res;
        int n = nums.size();
        for(int i = 0; i < n; i++)
        {
            if(nums[i] == INT_MIN)
            {
                lower = nums[i]+1;
                continue;
            }
            
            if(lower == nums[i]-1)
            {
                res.push_back(to_string(lower));
            }
            else if(lower < nums[i]-1)
            {
                res.push_back(to_string(lower) + "->" + to_string(nums[i]-1));
            }
            
            if(nums[i] == INT_MAX) return res;
            
            lower = nums[i]+1;

        }
        
        //check upper
        if(lower <= upper)
        {
            string range = getRange(lower, upper);
            res.push_back(range);
        }
        
        return res;
    }
    
    string getRange(int start, int end)
    {
        if(start == end) return to_string(start);
        
        return to_string(start) + "->" + to_string(end);
    }
};
