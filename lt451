451. Sort Characters By Frequency   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 10506
Total Submissions: 20827
Difficulty: Medium
Contributors: stickypens
Given a string, sort it in decreasing order based on the frequency of characters.

Example 1:

Input:
"tree"

Output:
"eert"

Explanation:
'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
Example 2:

Input:
"cccaaa"

Output:
"cccaaa"

Explanation:
Both 'c' and 'a' appear three times, so "aaaccc" is also a valid answer.
Note that "cacaca" is incorrect, as the same characters must be together.
Example 3:

Input:
"Aabb"

Output:
"bbAa"

Explanation:
"bbaA" is also a valid answer, but "Aabb" is incorrect.
Note that 'A' and 'a' are treated as two different characters.


class Solution {
public:
    string frequencySort(string s) {
        if(s.empty()) return "";
        
        int n = s.length();
        
        unordered_map<char, int> table;
        
        for(auto c : s)
        {
            table[c]++;
        }
        
        
        vector<string> freq(n+1, "");
        
        for(auto v : table)
        {
            freq[v.second].append(v.second, v.first);
        }
        
        string res = "";
        
        for(int i = n; i >=0; i--)
        {
            if(freq[i].empty()) continue;
            
            res.append(freq[i]);
        }
        
        return res;
    }
};
