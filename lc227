/*227. Basic Calculator II   QuestionEditorial Solution  My Submissions
Total Accepted: 32706
Total Submissions: 119697
Difficulty: Medium
Contributors: Admin
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

You may assume that the given expression is always valid.

Some examples:
"3+2*2" = 7
" 3/2 " = 1
" 3+5 / 2 " = 5
Note: Do not use the eval built-in library function.
*/

//思路：这里用一个stack记录之前的数字, 和sign来记录上一个operator
//遇到+或-只需要把当前数字*1或者-1然后加入到stk中，
//遇到*或/则需要把stk中top拿出来，然后和当前的数字算出来结果，把结果再放入到stk中
//这样当走完一遍string之后，只需要把stk中的所有数字加起来就好


class Solution {
public:
    int calculate(string s) {
        if(s.empty()) return 0;
        
        int n = s.length();
        
        int cur= 0;
        int res = 0;

        stack<int> stk;
        char sign = '+';
        
        for(int i = 0; i < n; i++)
        {
            if(isdigit(s[i]))
            {
                cur = cur*10 + s[i]-'0';
            }
            //Note:这里i==n-1可以让最后一个数字加入stack中
            if((!isdigit(s[i]) && s[i] != ' ') ||  i == n-1)
            {
                if(sign == '+')
                {
                    stk.push(cur);
                }
                else if(sign == '-')
                {
                    stk.push(-cur);
                }
                else if(sign == '*')
                {
                    int tmp = stk.top(); stk.pop();
                    stk.push(tmp*cur);
                }
                else if(sign == '/')
                {
                    int tmp = stk.top(); stk.pop();
                    stk.push(tmp/cur);
                }
                
                sign = s[i];
                cur = 0;
            }
        }
        
        while(!stk.empty())
        {
            res+= stk.top();
            stk.pop();
        }
        
        return res;
    }
};
