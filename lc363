363. Max Sum of Rectangle No Larger Than K   Add to List QuestionEditorial Solution  My Submissions
Total Accepted: 8652
Total Submissions: 27151
Difficulty: Hard
Contributors: Admin
Given a non-empty 2D matrix matrix and an integer k, find the max sum of a rectangle in the matrix such that its sum is no larger than k.

Example:
Given matrix = [
  [1,  0, 1],
  [0, -2, 3]
]
k = 2
The answer is 2. Because the sum of rectangle [[0, 1], [-2, 3]] is 2 and 2 is the max number no larger than k (k = 2).

Note:
The rectangle inside the matrix must have an area > 0.
What if the number of rows is much larger than the number of columns?
Credits:
Special thanks to @fujiaozhu for adding this problem and creating all test cases.

//Runtime: O(m^2 *n * logn)
//Space: O(n)
//here assume n > m
class Solution {
public:
    //思路：对于每一列作为rectangle最左边，向右拓展，把一行的sum记下来
    //对于得到的height数组，利用maximum subarray sum no more than k来求出最大值
    int maxSumSubmatrix(vector<vector<int>>& matrix, int k) {
        if(matrix.empty() || matrix.at(0).empty()) return 0;
        
        int n = matrix.size();
        int m = matrix.at(0).size();
        
        
        int res = INT_MIN;
        for(int i = 0; i <m; i++)
        {
            vector<int> height(n, 0);
            for(int j = i; j <m; j++)
            {
                for(int l = 0; l <n; l++)
                {
                    height[l] += matrix[l][j];
                }
                
                //find sum[a] - sum[b] <=k ==> sum[b] >= sum[a]-k
                set<int> sums;
                sums.insert(0);
                int cur = 0;
                for(int l = 0; l < n; l++)
                {
                    cur+= height[l];
                    int target = cur - k;
                    set<int>::iterator low = sums.lower_bound(target);
                    if(low != sums.end())
                    {
                        res = max(res, cur - *low);
                    }
                    
                    sums.insert(cur);
                }
            }
            
        }
        
        return res;
    }
};
